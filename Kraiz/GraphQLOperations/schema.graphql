mutation DeleteUserProfile($input: DeleteUserProfileInput!) {
    deleteUserProfile(input: $input) {
        id
        mobileNumber
        name
    }
}

mutation CreateUserProfile($input: CreateUserProfileInput!) {
    createUserProfile(input: $input) {
        id
        mobileNumber
        username
        name
        profilePicId
    }
}

mutation UpdateUserProfile($input: UpdateUserProfileInput!) {
    updateUserProfile(input: $input) {
        id
        mobileNumber
        username
        name
        gender
        profilePicId
        dob
    }
}

query GetUserProfile($id: ID!) {
    getUserProfile(id: $id) {
        id
        mobileNumber
        username
        name
        gender
        profilePicId
        dob
    }
}

query GetUserProfileByUsername($username: String!) {
    getUserProfileByUsername(username: $username) {
        mobileNumber
        username
        name
        gender
        profilePicId
        dob
    }
}

query GetUserProfileByMobileNumber($mobileNumber: ID!) {
    getUserProfileByMobileNumber(mobileNumber: $mobileNumber) {
        mobileNumber
        username
        name
        gender
        profilePicId
        dob
    }
}

mutation TriggerFsm($input: FsmInput!, $userId: ID!) {
    triggerFsm(input: $input, userId: $userId)
}

query GetUserChannelView {
    getUserChannel {
        userVibes {
            nextToken
            userVibes {
                vibeId
                vibeTypeTagGsiPk
                vibeTypeGsiPk
                version
                updatedTime
                createdAt
                vibeName
                isSender
                isAnonymous
                seen
                reach
                profileId
                hailIds
            },
            profiles {
                id
                mobileNumber
                username
                name
                profilePicId
            },
            hails {
                id
                vibeId
                author
                comment
                createdAt
            },
        },
        profiles {
            id
            mobileNumber
            username
            name
            profilePicId
        },
        lastPublicVibeFetchTime
    }
}

mutation DeleteUserChannelUpdates($liveVibeBucketIds: [ID!], $liveProfileBucketIds: [ID!]) {
    deleteUserChannelUpdates(liveVibeBucketIds: $liveVibeBucketIds, liveProfileBucketIds: $liveProfileBucketIds)
}

query GetPaginatedUserVibes($vibeTag: VibeTag, $vibeType: VibeType!, $first: Int, $after: String) {
    getUserVibes(vibeTag: $vibeTag, vibeType: $vibeType, first: $first, after: $after) {
        nextToken
        userVibes {
            vibeId
            vibeTypeTagGsiPk
            vibeTypeGsiPk
            version
            updatedTime
            createdAt
            vibeName
            isSender
            isAnonymous
            seen
            reach
            profileId
            hailIds
            hailProfileIds
        },
        profiles {
            id
            mobileNumber
            username
            name
            profilePicId
        },
        hails {
            id
            vibeId
            author
            comment
            createdAt
        }
    }
}

query GetRandomPublicVibes($vibeTag: VibeTag!){
    getRandomPublicVibes(vibeTag: $vibeTag) {
        vibes {
            id
            version
            tag
            name
            author
            createdAt
            updatedTime
            isAnonymous
            vibeComponents {
                ids
                sequence
                texts
                format
                template
                globalSequence
            }
        },
        profiles {
            id
            name
            username
            profilePicId
        }
    }
}

query FetchVibeData($vibeId: ID!){
    fetchVibeData(vibeId: $vibeId) {
        id
        version
        type
        createdAt
        updatedTime
        isAnonymous
        name
        author
        tag
        vibeComponents {
            ids
            seenIds
            sequence
            texts
            format
            template
            globalSequence
        }
        ... on PrivateVibe {
            accessGroup
            seenCount
        }
    }
}

mutation UpdateLastPublicVibeFetchTime($userId: ID) {
    updateLastPublicVibeFetchTime(userId: $userId) {
        userId
    }
}
